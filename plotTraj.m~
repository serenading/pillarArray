%% Script plots trajectories for visualisation from various pillar array devices.
% Note: Tierpsy (python) and MATLAB read images differently so transposing
% is required for alignment. i.e. plot(y,x) instead of plot(x,y);
% imshow(img)' instead of imshow(img).

% Author: @serenading. Dec 2020

clear
close all
% TODO: relabel xy axis as mm rather than pixels
% ISSUES: colormap for overlaid trajectory not working at the moment

%% Set parameters
metadataPath = '/Users/sding/OneDrive - Imperial College London/pillarArray/AuxiliaryFiles/metadata.csv';
firstFrameDir = '/Volumes/diskAshurDT/pillarArray/AuxiliaryFiles/pillarContourImages';
device2use = 300; % variable spacing devices have diameters of 384, 480, 420. Even spacing devices 
frameRate = 25;
pixelsize = 10; % each pixel is 10 microns
timeWindow = [0 5]; % time window to plot (in minutes)
strains = {'N2','CB4856','MY23','VX34','QX1410','JU1373','NIC58'};
plotFirstFrame = true; % true to plot first full frame image data before adding trajectories on top. Useful for script development to ensure orientation etc.
separatePlots = false; % true to do a separate plot per experimental replicate, or false to get one giant figure with all replicates
onFoodFilter = true; % true to use food contour coordinates to filter out off food trajectories. Also limits display to food area only
plotDensity = false; % true to plot trajectory density (3D), false to plot trajectory (2D)

%% Find the relevant files and go through them one by one
% Get relevant filenames
metadata = readtable(metadataPath,'Delimiter',',','preserveVariableNames',true);
fileInd = find(metadata.devicePitch == device2use & metadata.is_bad ~=1);

% Initialise figure if doing one big figure for all experiments
if ~separatePlots
    trajFig = figure; hold on
    strainPlotCtr = ones(1,numel(strains));
    subplot_nRows = 3;%ceil(numel(fileInd)/numel(strains));
    subplot_nCols = numel(strains);
end

%% Go through each recording and load data
for fileCtr = 1:numel(fileInd)
    fileIdx = fileInd(fileCtr);
    % Get skeletons filename
    filename = [metadata.dirName{fileIdx}, '/run' num2str(metadata.runNumber(fileIdx)),'_' metadata.strain_name{fileIdx},'/', metadata.basename{fileIdx}];
    filename = strrep(strrep(filename,'/Volumes/behavgenom$/Serena/pillarArray/','/Volumes/diskAshurDT/pillarArray/Results/'),'.hdf5','_skeletons.hdf5');
    % Load tracking data
    trajData = h5read(filename,'/trajectories_data');
    foodContour = h5read(filename,'/food_cnt_coord');
    if plotFirstFrame
        % Load first full image
        fullImgPath = strrep([firstFrameDir,'/', num2str(metadata.date(fileIdx)),'/', metadata.basename{fileIdx}],'.hdf5','.jpg');
        fullImg = imread(fullImgPath);
    end
    
    %% Apply data filters and flip image as needed
    % Filter for time window
    validFrames = timeWindow*60*frameRate;
    frameLogInd = trajData.frame_number>=validFrames(1) & trajData.frame_number<=validFrames(2);
    % Filter for onFood
    if onFoodFilter
        xLogInd = trajData.coord_x >= min(foodContour(1,:)) & trajData.coord_x <= max(foodContour(1,:));
        yLogInd = trajData.coord_y >= min(foodContour(2,:)) & trajData.coord_y <= max(foodContour(2,:));
        onFoodLogInd = xLogInd & yLogInd;
    else
        onFoodLogInd = true(size(trajData.coord_x));
    end
    % Orient for variable spacing devices so that smaller pillars are always on the right side (as viewed in Tierpsy Tracker)
    if strcmp(metadata.smallerPillarSide{fileIdx},'L')
        trajData.coord_x = 2048-trajData.coord_x; % camera resolution is 2048x2048 pixels
        foodContour(1,:) = 2048-foodContour(1,:);
        if plotFirstFrame
            fullImg = flipud(fullImg);
        end
        disp(['Pillar orientation flipped for ' metadata.basename{fileIdx} '.'])
    end
    
    %% Plot
    % Set colormap for traj colours according to time
    if ~plotDensity
        timeCmap = double(trajData.frame_number)/frameRate/60;
    end
    % Set plot
    if ~separatePlots % One big plot for all replicates
        % Initialise subplot
        strain = metadata.strain_name{fileIdx};
        strainId = find(strcmp(strain,strains)); % which strain
        subplotPos = numel(strains)*(strainPlotCtr(strainId)-1) + strainId; % get subplot position
        % Set subplot
        hf = subplot(subplot_nRows,subplot_nCols,subplotPos); hold on
        ha = gca;
    else % Separate figure for each experiment
        hf = figure; hold on
        ha = gca;
    end
    % Plot First frame
    if plotFirstFrame
        imshow(fullImg,'parent',ha)
    end
    % Plot Trajectories
    if plotDensity % 2D histogram plot for trajectory density
        hist3(ha,[trajData.coord_y(onFoodLogInd), trajData.coord_x(onFoodLogInd)],'Nbins',[10,10],'CDataMode','auto','FaceColor','interp')
        % Scatter plot for trajectories
    else
        pointsize = 5;
        scatter(ha,trajData.coord_y(frameLogInd & onFoodLogInd),trajData.coord_x(frameLogInd & onFoodLogInd),pointsize,timeCmap(frameLogInd & onFoodLogInd),'filled');
        % Add food contour
        plot(ha,foodContour(2,:),foodContour(1,:),'r-')
    end
    
    %% Format
    colorbar
    title([metadata.strain_name{fileIdx} ' (' num2str(metadata.wormNum(fileIdx)) ' worms)'])
    xlabel('x (pixels)')
    ylabel('y (pixels)')
    if onFoodFilter
        xlim([min(foodContour(2,:))-50, max(foodContour(2,:))+50])
        ylim([min(foodContour(1,:))-50, max(foodContour(1,:))+50])
    else
        xlim([0 2000])
        ylim([0 2000])
    end
    
    %% Update strain subplot counter
    if ~separatePlots
        strainPlotCtr(strainId) = strainPlotCtr(strainId)+1;
    end
end